@model IEnumerable<PathDistribution.Models.Assignments>

@{
    ViewBag.Title = "Activities";
    Layout = "~/Views/Shared/_LayoutSched.cshtml";
}

@section styles
{
    @Styles.RenderFormat("<link rel=\"stylesheet\" href=\"{0}?nocache=" + Guid.NewGuid().ToString("N") + "\" />", "~/bundles/2")
    <style>
        .rowDragHandle {
            display: inline-block;
            vertical-align: middle;
            margin-right: .5em;
            cursor: pointer;
        }

        /*css.gg*/
        .gg-menu-grid-o {
            box-sizing: border-box;
            position: relative;
            display: block;
            transform: scale(1);
            width: 8px;
            height: 16px;
        }

            .gg-menu-grid-o::before {
                content: "";
                display: block;
                box-sizing: border-box;
                position: absolute;
                width: 4px;
                height: 4px;
                background: #466b95;
                box-shadow: 0 6px 0 #466b95, 6px 6px 0 #466b95, 0 0 0 #466b95, 0 0 0 #466b95, 0 0 0 #466b95, 6px 0 0 #466b95, 0 0 0 #466b95, 0 0 0 #466b95;
                border-radius: 22px;
            }

        ul.nodot {
            list-style-type: none;
            margin: 0;
            padding: 0;
        }

            ul.nodot li {
                background-image: none;
                padding: 2px 0 2px 5px;
                font-size: 11px;
            }

        div.ui-multiselect-menu {
            background-color: white;
        }

        ul.ui-multiselect-checkboxes li {
            background-image: none;
            padding: 0;
        }

        ul.ui-helper-reset li {
            background-image: none;
            padding: 0;
        }

        label.ui-multiselect-filter-label {
            font: 11px/14px arial;
            color: #9e7b48;
            text-decoration: none;
            padding-bottom: 2px;
        }

        div.ui-multiselect-filter {
            padding-bottom: 5px;
        }

        .hidden {
            display: none !important;
        }
    </style>
}

@section scripts
{
    @Scripts.RenderFormat("<script src=\"{0}?nocache=" + Guid.NewGuid().ToString("N") + "\"></script>", "~/bundles/e")
    <script type="text/javascript">
        function FilterAssignments() {
            var status = $("#StatusFilter").slider("value"); // 0 - Active, 1 = Inactive, 2 = All
            var assign = $.map($("#ActivityFilter").multiselect("getChecked"), function (input) {
                return input.value;
            });

            var trs = $("#assignments tr[data-id!='']").filter(function () {
                return (typeof $(this).attr('data-id') !== "undefined" && $(this).attr('data-id') != "");
            });

            $(trs).filter(function () {
                var assignfilter = assign.indexOf($(this).find("#item_intAssignmentType").val()) > -1;
                var statusfilter = (([0, 2].indexOf(status) > -1 && $(this).find("#item_bitActive").prop("checked")) || ([1, 2].indexOf(status) > -1 && !$(this).find("#item_bitActive").prop("checked")));

                /* true = hide, false = show */
                $(this).toggleClass("hidden", !(assignfilter && statusfilter))
            });
            return
        }

        function UpdateItem(ctrl) {
            var id = ctrl.data("id").toString();
            var map = {};
            map["pkAssignment"] = id;
            ctrl.find("select,input:not(:hidden)").each(function (i, a) {
                if ($(a).is(":checkbox")) {
                    map[$(a).attr("name").replace("item.", "")] = $(a).is(":checked");
                } else {
                    map[$(a).attr("name").replace("item.", "")] = $(a).val();
                }
            });
            $.ajax({
                url: '@Url.Action("UpsertAssignments","Admin")',
                dataType: "json",
                type: "POST",
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(map),
                async: true,
                processData: false,
                cache: false
            }).done(function (result) {
                if (result.Status == "Success") {
                    if (id == "") {
                        var $lastRow = $("#assignments tbody tr:not('.new'):last");
                        var $newRow = $lastRow.clone(true);
                        $newRow.attr("data-id", result.assignment.pkAssignment);
                        $newRow.find("input[id='item_chrAbbr']").val(result.assignment.chrAbbr);
                        $newRow.find("input[id='item_chrAssignment']").val(result.assignment.chrAssignment);
                        $newRow.find("input[id='item_intMaxSlideCount']").val(result.assignment.intMaxSlideCount);
                        $newRow.find("select[id='item_intAssignmentType']").val(result.assignment.intAssignmentType);
                        $newRow.find("input[id='item_bitActive']").prop('checked', result.assignment.bitActive);

                        if ($newRow.find("img[name='bitDelete']").length == 0) {
                            $($newRow.find("td:first")).prepend('<img name="bitDelete" src="@Url.Content("~/Content/img/trash.png")" style="cursor:pointer;" />');
                        }

                        $lastRow.after($newRow);

                        var $addRow = $("#assignments tbody tr.new");
                        $addRow.find("input:text").val("");
                        $addRow.find("input:checkbox").prop("checked", true);
                        $addRow.find("select").val("0");
                    } else {
                        ctrl.attr("data-id", result.assignment.pkAssignment);
                        ctrl.find("input[id='item_chrAbbr']").val(result.assignment.chrAbbr);
                        ctrl.find("input[id='item_chrAssignment']").val(result.assignment.chrAssignment);
                        ctrl.find("input[id='item_intMaxSlideCount']").val(result.assignment.intMaxSlideCount);
                        ctrl.find("select[id='item_intAssignmentType']").val(result.assignment.intAssignmentType);
                        ctrl.find("input[id='item_bitActive']").prop('checked', result.assignment.bitActive);
                    }
                } else {
                    alert("Oops");
                }
            });
        }

        $(document).ready(function () {
            $("#assignments tbody").sortable({
                items: "tr:not(.new)",
                stop: function (e, ui) {
                    UpdateItem(ui.item);
                }
            });

            $("#ActivityFilter").multiselect({
                buttonWidth: "160px",
                selectedText: "",
                noneSelectedText: "",
                header: ['checkAll', 'uncheckAll'],
                linkInfo: {
                    checkAll: { text: "All" },
                    uncheckAll: { text: "None" }
                }
            }).bind("multiselectclick multiselectcheckall multiselectuncheckall", function (event, ui) {
                FilterAssignments();
            }).multiselectfilter({
                width: "100px",
                placeholder: ""
            });

            $("li.ui-multiselect-close").remove();

            var handle = $("#StatusText");
            var slide = ["Active", "Inactive", "All"];
            $("#StatusFilter").slider({
                min: 0, max: 2, range: "min",
                value: 2,
                create: function () { handle.text(slide[$(this).slider("value")]); },
                change: function (event, ui) { FilterAssignments(); },
                slide: function (e, ui) { handle.text(slide[ui.value]); }
            });

            $("#assignments").find("select,input").on("change", function (e) {
                UpdateItem($(this).closest("tr"));
            });


        $("img[name='bitDelete']").on("click", function () {
            var $ctrl = $(this).closest("tr");
            var id = $ctrl.data("id").toString();
            if (id != "") {
                var map = {};
                map["pkAssignment"] = id;
                $.ajax({
                    url: '@Url.Action("DeleteAssignment","Admin")',
                    dataType: "json",
                    type: "POST",
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(map),
                    async: true,
                    processData: false,
                    cache: false
                }).done(function (result) {
                    if (result.Status == "Success") {
                        if (id != "") {
                            $ctrl.remove();

                            var $addRow = $("#assignments tbody tr.new");
                            $addRow.find("input:first").focus();
                        }
                    } else {
                        alert("Oops");
                    }
                });
            }
        });
        });
    </script>
}


@section Left
{
    <table id="schedulefilter" style="width:95%">
        <tr>
            <td colspan="2" style="font-weight:bold">Filter</td>
        </tr>
        <tr>
            <td class="text7">Activity</td>
            @{
                var selectList = new List<SelectListItem>();
                foreach (var enumValue in Enum.GetValues(typeof(PathDistribution.Models.AssignmentType)) as PathDistribution.Models.AssignmentType[])
                {
                    var SI = new SelectListItem();
                    SI.Value = ((int)enumValue).ToString();
                    SI.Selected = true;
                    var mI = enumValue.GetType().GetMember(enumValue.ToString());
                    var dA = mI[0].GetCustomAttributes(typeof(System.ComponentModel.DataAnnotations.DisplayAttribute), false) as System.ComponentModel.DataAnnotations.DisplayAttribute[];
                    if (dA == null || dA.Length != 1)
                    {
                        SI.Text = enumValue.ToString();
                    }
                    else
                    {
                        SI.Text = dA[0].Name.ToString();
                    }
                    selectList.Add(SI);
                }
            }
            <td>@Html.DropDownList("ActivityFilter", selectList, new { @id = "ActivityFilter", multiple = "true" })</td>
        </tr>
    </table>
    <table id="schedulefilter" style="width:95%">
        <tr>
            <td class="text7" style="vertical-align: top; padding-top: 5px; width: 56.375px;">Status</td>
            <td>
                <div id="StatusFilter"></div>
                <div id="StatusText" class="text2" style="width:100%;text-align:center;color:#466b95;"></div>
            </td>
        </tr>
    </table>
}

<div id="content">
    <table id="assignments" style="width:55%;padding-top:10px;padding-left:5px;" cellspacing="3" cellpadding="0">
        <thead class="text2" style="text-align:center;margin-top:25px;">
            <tr>
                <td></td>
                <td style="text-align:left">Abbr</td>
                <td style="text-align:left">Name</td>
                <td style="text-align:center">Max Slides</td>
                <td style="text-align:center">Type</td>
                <td style="text-align:center">Active</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr class="text5" style="text-align:left;" data-id="@item.pkAssignment">
                    <td style="text-align:center">
                        @if (!item.bitIsScheduled)
                        {
                            <img name="bitDelete" src="@Url.Content("~/Content/img/trash.png")" style="cursor:pointer;" />
                        }
                        <span class="rowDragHandle"><i class="gg-menu-grid-o"></i></span>
                    </td>
                    <td style="text-align:left">@Html.TextBoxFor(modelItem => item.chrAbbr, new { @style = "width: 140px" })</td>
                    <td style="text-align:left">@Html.TextBoxFor(modelItem => item.chrAssignment, new { @style = "width: 350px" })</td>
                    <td style="text-align:center">@Html.TextBoxFor(modelItem => item.intMaxSlideCount, new { @style = "width: 40px", @type = "number" })</td>
                    <td style="text-align:center">@Html.EnumDropDownListFor(modelItem => item.intAssignmentType)</td>
                    <td style="text-align:center">@Html.EditorFor(modelItem => item.bitActive)</td>
                </tr>
            }
            <tr class="text5 new" style="text-align:left;" data-id="">
                <td style="text-align:center"></td>
                <td style="text-align:left"><input data-val="true" data-val-maxlength="The field chrAbbr must be a string or array type with a maximum length of '10'." data-val-maxlength-max="10" id="item_chrAbbr" name="item.chrAbbr" style="width: 140px" type="text" /></td>
                <td style="text-align:left"><input data-val="true" data-val-maxlength="The field chrAssignment must be a string or array type with a maximum length of '100'." data-val-maxlength-max="100" id="item_chrAssignment" name="item.chrAssignment" style="width: 350px" type="text" /></td>
                <td style="text-align:center"><input data-val="true" data-val-number="The field intMaxSlideCount must be a number." data-val-required="The intMaxSlideCount field is required." id="item_intMaxSlideCount" name="item.intMaxSlideCount" style="width: 40px" type="number" /></td>
                <td style="text-align:center">
                    <select data-val="true" data-val-required="The intAssignmentType field is required." id="item_intAssignmentType" name="item.intAssignmentType">
                        <option selected="selected" value="0">Daily</option>
                        <option value="1">Weekly</option>
                        <option value="2">Partial Off</option>
                        <option value="3">Full Off</option>
                    </select>
                </td>
                <td style="text-align:center"><input checked="checked" class="check-box" data-val="true" data-val-required="The bitActive field is required." id="item_bitActive" name="item.bitActive" type="checkbox" value="true"></td>
            </tr>
        </tbody>
    </table>
</div>