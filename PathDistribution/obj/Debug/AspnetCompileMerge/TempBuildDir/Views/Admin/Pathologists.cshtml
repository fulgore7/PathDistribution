@model IEnumerable<PathDistribution.Models.Pathologists>

@{
    ViewBag.Title = "Pathologists";
    Layout = "~/Views/Shared/_LayoutSched.cshtml";
}

@section styles
{
    <style>
        .rowDragHandle {
            display: inline-block;
            vertical-align: text-bottom;
            margin-right: .5em;
            cursor: pointer;
            padding: .1em;
        }

        /*css.gg*/
        .gg-menu-grid-o {
            box-sizing: border-box;
            position: relative;
            display: block;
            transform: scale(1);
            width: 16px;
            height: 16px;
        }

            .gg-menu-grid-o::before {
                content: "";
                display: block;
                box-sizing: border-box;
                position: absolute;
                width: 4px;
                height: 4px;
                background: #466b95;
                box-shadow: 0 6px 0 #466b95, 6px 6px 0 #466b95, 0 0 0 #466b95, 0 0 0 #466b95, 0 0 0 #466b95, 6px 0 0 #466b95, 0 0 0 #466b95, 0 0 0 #466b95;
                border-radius: 22px;
            }

        .ui-widget-content {
            border: 1px solid #dddddd;
            background: #ffffff;
            color: #333333;
        }

        .ui-autocomplete li {
            background-image: none;
        }

        .hidden {
            display: none !important;
        }
    </style>
}

@section scripts
{
    <script type="text/javascript">
        function UpdatePath(tr, indexOrder) {
            var map = {};
            map["pkPath"] = tr.data("id").toString();
            map["bitGeneral"] = tr.find("input[id='item_bitGeneral']").prop("checked").toString();
            map["bitSkin"] = tr.find("input[id='item_bitSkin']").prop("checked").toString();
            map["bitHeme"] = tr.find("input[id='item_bitHeme']").prop("checked").toString();
            map["bitCyto"] = tr.find("input[id='item_bitCyto']").prop("checked").toString();
            map["bitGU"] = tr.find("input[id='item_bitGU']").prop("checked").toString();
            //map["bitIsConsultant"] = tr.find("input[id='item_bitIsConsultant']").prop("checked").toString();
            map["intGI"] = tr.find("input[id='item_intGI']").val().toString();
            map["bitActive"] = tr.find("input[id='item_bitActive']").prop("checked").toString();
            map["intOrder"] = indexOrder.toString();

            $.ajax({
                url: '@Url.Action("UpsertPathologist", "Admin")',
                dataType: "json",
                type: "POST",
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(map),
                async: true,
                processData: false,
                cache: false
            }).done(function (result) {
                if (result.Status != "Success") {
                    alert("Oops");
                }
            });
        }

        function FilterStatus(tr) {
            var status = $("#StatusFilter").slider("value"); // 0 - Active, 1 = Inactive, 2 = All
            var checked = tr.find("input[id='item_bitActive']").prop("checked");
            return (([0, 2].indexOf(status) > -1) && checked)
                    || (([1, 2].indexOf(status) > -1) && !checked)
        }

        function FilterDiscipline(tr,id,field) {
            var disc = $("#"+id+"Filter").slider("value"); // 0 - Active, 1 = Inactive, 2 = All
            return (([0, 2].indexOf(disc) > -1) && tr.find("input[id='"+field+"']").prop("checked"))
                || (([1, 2].indexOf(disc) > -1) && !tr.find("input[id='"+field+"']").prop("checked"))
        }

        function AddDisciplineFilter(filter) {
            var handle = $("#" + filter + "Text");
            var slide = ["Is " + filter, "Not " + filter, "All"];
            $("#"+filter+"Filter").slider({
                min: 0, max: 2, range: "min",
                value: 2,
                create: function () { handle.text(slide[$(this).slider("value")]); },
                change: function (event, ui) { Filter(); },
                slide: function (e, ui) { handle.text(slide[ui.value]); }
            });
        }

        function Filter() {
            $("#paths tbody tr[data-id!='']").filter(function () {
                /* true = hide, false = show */
                $(this).toggleClass("hidden",
                    !(FilterStatus($(this))
                        && FilterDiscipline($(this), "GP", 'item_bitGeneral')
                        && FilterDiscipline($(this), "SK", 'item_bitSkin')
                        && FilterDiscipline($(this), "HEME", 'item_bitHeme')
                        && FilterDiscipline($(this), "Cyto", 'item_bitCyto')
                        && FilterDiscipline($(this), "GU", 'item_bitGU')
                        && FilterDiscipline($(this), "Consult", 'item_bitIsConsultant'))
                )
            });
        }

        $(document).ready(function () {
            $("#paths tbody").sortable({
                items: "tr:not(.new)",
                stop: function (e, ui) {
                    var id = ui.item.data("id").toString();
                    var order = ui.item.index() + 1;
                    UpdatePath(ui.item, order);
                }
            });

            $("#paths").find("input").on("change", function (e) {
                var idsInOrder = $("#paths tbody").sortable('toArray', { attribute: 'data-id' });
                var order = idsInOrder.indexOf($(this).closest("tr").data("id").toString()) + 1;
                UpdatePath($(this).closest("tr"), order);
            });

            var handle = $("#StatusText");
            var slide = ["Active", "Inactive", "All"];
            $("#StatusFilter").slider({ min: 0, max: 2, range: "min",
                value: 0,
                create: function () { handle.text(slide[$(this).slider("value")]); },
                change: function (event, ui) { Filter(); },
                slide: function (e, ui) { handle.text(slide[ui.value]); }
            });

            AddDisciplineFilter("GP");
            AddDisciplineFilter("SK");
            AddDisciplineFilter("HEME");
            AddDisciplineFilter("Cyto");
            AddDisciplineFilter("GU");
            AddDisciplineFilter("Consult");

            $('#item_pkPath').autocomplete({
                source: function (request, response) {
                    var map = {};
                    map["filter"] = request;
                    $.ajax({
                        url: '@Url.Action("GetCopathPathologists", "Admin")',
                        dataType: "json",
                        type: "POST",
                        contentType: 'application/json; charset=utf-8',
                        data: JSON.stringify(map),
                        async: true,
                        processData: false,
                        cache: false
                    }).done(function (result) {
                        if (result.Status == "Success") {
                            response(result.data);
                        } else {
                            alert("Oops");
                        }
                    });
                },
                minLength: 0,
                create: function () {
                    $(this).data('ui-autocomplete')._renderItem = function (ul, item) {
                        return $("<li>")
                            .append("<div style='display:flex;justify-content: space-between;width:100%'><div style='width:15%;border-right:1px solid black'>" + item.chrCopathAbbr + "</div><div style='width:85%;padding-left:3px;'>" + item.chrName + "</div>")
                            .appendTo(ul);
                    };
                },
                select: function (event, ui) {
                    event.preventDefault();

                    var status = $("#StatusFilter").slider("value"); // 0 - Active, 1 = Inactive, 2 = All
                    var active = ([0, 2].indexOf(status) > -1);

                    var map = {};
                    map["pkPath"] = ui.item.pkPath;
                    map["bitActive"] = active;

                    $.ajax({
                        url: '@Url.Action("UpsertPathologist", "Admin")',
                        dataType: "json",
                        type: "POST",
                        contentType: 'application/json; charset=utf-8',
                        data: JSON.stringify(map),
                        async: true,
                        processData: false,
                        cache: false
                    }).done(function (result) {
                        if (result.Status == "Success") {
                            var $lastRow = $("#paths tbody tr:not('.new'):last");
                            var $newRow = $lastRow.clone(true);
                            $newRow.removeClass("hidden");
                            $newRow.attr("data-id", ui.item.pkPath);
                            $newRow.find("td[id='item_chrCopathAbbr']").text(ui.item.chrCopathAbbr);
                            $newRow.find("td[id='item_chrName']").text(ui.item.chrName);
                            $newRow.find("input[id='item_bitGeneral']").prop('checked', ui.item.bitActive);
                            $newRow.find("input[id='item_bitActive']").prop('checked', ui.item.bitActive);
                            $newRow.find("input[id='item_bitSkin']").prop("checked",false);
                            $newRow.find("input[id='item_bitHeme']").prop("checked",false);
                            $newRow.find("input[id='item_bitCyto']").prop("checked",false);
                            $newRow.find("input[id='item_bitGU']").prop("checked",false);
                            //$newRow.find("input[id='item_bitIsConsultant']").prop("checked",false);
                            $newRow.find("input[id='item_intGI']").val("0");

                            if ($newRow.find("img[name='bitDelete']").length == 0) {
                                $($newRow.find("td:first")).prepend('<img name="bitDelete" src="@Url.Content("~/Content/img/trash.png")" style="cursor:pointer;" />');
                            }
                            $lastRow.after($newRow);

                            var $addRow = $("#paths tbody tr.new");
                            $addRow.find("input:text").val("");

                            $newRow.find("input:first").focus();
                        } else {
                            alert("Oops");
                        }
                    });
                }
            }).focus(function () {
                $(this).autocomplete('search', '');
            });

            $("img[name='bitDelete']").on("click", function () {
                var $ctrl = $(this).closest("tr");
                var id = $ctrl.data("id").toString();
                if (id != "") {
                    var map = {};
                    map["pkPath"] = id;
                    $.ajax({
                        url: '@Url.Action("DeletePathologist","Admin")',
                        dataType: "json",
                        type: "POST",
                        contentType: 'application/json; charset=utf-8',
                        data: JSON.stringify(map),
                        async: true,
                        processData: false,
                        cache: false
                    }).done(function (result) {
                        if (result.Status == "Success") {
                            if (id != "") {
                                $ctrl.remove();

                                var $addRow = $("#paths tbody tr.new");
                                $addRow.find("input:first").focus();
                            }
                        } else {
                            alert("Oops");
                        }
                    });
                }
            });

            Filter();
        });
    </script>

}

@section Left
{
    <table id="schedulefilter" style="width:95%">
        <tr>
            <td colspan="2" style="font-weight:bold">Filter</td>
        </tr>
        <tr>
            <td class="text7" style="vertical-align: top; padding-top: 5px; width:56.375px;">Status</td>
            <td>
                <div id="StatusFilter"></div>
                <div id="StatusText" class="text2" style="width:100%;text-align:center;color:#466b95;"></div>
            </td>
        </tr>
        <tr>
            <td class="text7" style="vertical-align: top; padding-top: 5px; width:56.375px;">GP</td>
            <td>
                <div id="GPFilter"></div>
                <div id="GPText" class="text2" style="width:100%;text-align:center;color:#466b95;"></div>
            </td>
        </tr>
        <tr>
            <td class="text7" style="vertical-align: top; padding-top: 5px; width:56.375px;">SK</td>
            <td>
                <div id="SKFilter"></div>
                <div id="SKText" class="text2" style="width:100%;text-align:center;color:#466b95;"></div>
            </td>
        </tr>
        <tr>
            <td class="text7" style="vertical-align: top; padding-top: 5px; width:56.375px;">HEME</td>
            <td>
                <div id="HEMEFilter"></div>
                <div id="HEMEText" class="text2" style="width:100%;text-align:center;color:#466b95;"></div>
            </td>
        </tr>
        <tr>
            <td class="text7" style="vertical-align: top; padding-top: 5px; width:56.375px;">Cyto</td>
            <td>
                <div id="CytoFilter"></div>
                <div id="CytoText" class="text2" style="width:100%;text-align:center;color:#466b95;"></div>
            </td>
        </tr>
        <tr>
            <td class="text7" style="vertical-align: top; padding-top: 5px; width:56.375px;">GU</td>
            <td>
                <div id="GUFilter"></div>
                <div id="GUText" class="text2" style="width:100%;text-align:center;color:#466b95;"></div>
            </td>
        </tr>
        <tr>
            <td class="text7" style="vertical-align: top; padding-top: 5px; width:56.375px;">Consult</td>
            <td>
                <div id="ConsultFilter"></div>
                <div id="ConsultText" class="text2" style="width:100%;text-align:center;color:#466b95;"></div>
            </td>
        </tr>
    </table>
}

<div id="content">
    <table id="paths" style="width:60%;padding-top:10px;padding-left:5px;" cellspacing="3" cellpadding="0">
        <thead class="text2" style="text-align:center;margin-top:25px;">
            <tr>
                <td></td>
                <td style="text-align:left">Path Abbr</td>
                <td style="text-align:left">Path Name</td>
                <td>GP</td>
                <td>SK</td>
                <td>HEME</td>
                <td>Cyto</td>
                <td>GU</td>
                <td>Consult</td>
                <td>GI Order</td>
                <td>Active</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr class="text5" style="text-align:left;" data-id="@item.pkPath">
                    <td style="text-align:center">
                        @if (!item.bitIsScheduled)
                        {
                            <img name="bitDelete" src="@Url.Content("~/Content/img/trash.png")" style="cursor:pointer;" />
                        }
                        <span class="rowDragHandle"><i class="gg-menu-grid-o"></i></span>
                    </td>
                    <td style="text-align:left" id="item_chrCopathAbbr">@Html.DisplayFor(modelItem => item.chrCopathAbbr)</td>
                    <td style="text-align:left;width:315px;" id="item_chrName">@Html.DisplayFor(modelItem => item.chrName)</td>
                    <td style="text-align:center">@Html.EditorFor(modelItem => item.bitGeneral)</td>
                    <td style="text-align:center">@Html.EditorFor(modelItem => item.bitSkin)</td>
                    <td style="text-align:center">@Html.EditorFor(modelItem => item.bitHeme)</td>
                    <td style="text-align:center">@Html.EditorFor(modelItem => item.bitCyto)</td>
                    <td style="text-align:center">@Html.EditorFor(modelItem => item.bitGU)</td>
                    <td style="text-align:center">@Html.CheckBoxFor(modelItem => item.bitIsConsultant,new { @onclick="return false;" })</td>
                    <td style="text-align:center">@Html.TextBoxFor(modelItem => item.intGI, new { @style = "width: 40px", @type = "number" })</td>
                    <td style="text-align:center">@Html.EditorFor(modelItem => item.bitActive)</td>
                </tr>
            }
            <tr class="text5 new" style="text-align:left;" data-id="">
                <td style="text-align:center"></td>
                <td colspan="2" style="text-align:left">
                    <input id="item_pkPath" name="item.pkPath" style="width: 95%" type="text" />
                    @*<input id="item_pkPath" name="item.pkPath" type="hidden" />
                        <input id="item_chrCopathAbbr" name="item.chrCopathAbbr" type="hidden" />
                        <input id="item_chrName" name="item.chrName" type="hidden" />*@
                </td>
                <td style="text-align:center"><input class="check-box" data-val="true" data-val-required="The bitGeneral field is required." id="item_bitGeneral" name="item.bitGeneral" type="checkbox" readonly /></td>
                <td style="text-align:center"><input class="check-box" data-val="true" data-val-required="The bitSkin field is required." id="item_bitSkin" name="item.bitSkin" type="checkbox" readonly /></td>
                <td style="text-align:center"><input class="check-box" data-val="true" data-val-required="The bitHeme field is required." id="item_bitHeme" name="item.bitHeme" type="checkbox" readonly /></td>
                <td style="text-align:center"><input class="check-box" data-val="true" data-val-required="The bitCyto field is required." id="item_bitCyto" name="item.bitCyto" type="checkbox" readonly /></td>
                <td style="text-align:center"><input class="check-box" data-val="true" data-val-required="The bitGU field is required." id="item_bitGU" name="item.bitGU" type="checkbox" readonly /></td>
                <td style="text-align:center"><input class="check-box" data-val="true" data-val-required="The bitIsConsultant field is required." id="item_bitIsConsultant" name="item.bitIsConsultant" type="checkbox" readonly /></td>
                <td style="text-align:center"><input id="item_intGI" name="item.intGI" style="width: 40px" type="number" value="0" readonly></td>
                <td style="text-align:center"><input checked="checked" class="check-box" data-val="true" data-val-required="The bitActive field is required." id="item_bitActive" name="item.bitActive" type="checkbox" value="true" readonly></td>
            </tr>
        </tbody>
    </table>
</div>