@model PathDistribution.Models.VacationSchedules

@{
    ViewBag.Title = "Vacation Schedule";
    Layout = "~/Views/Shared/_LayoutSched.cshtml";
}

@section styles
{
    @Styles.RenderFormat("<link rel=\"stylesheet\" href=\"{0}?nocache=" + Guid.NewGuid().ToString("N") + "\" />", "~/bundles/2")
    <style type="text/css">
        .green {
            background-color: green;
            border: 1px solid rgb(160,160,255) !important;
        }

        .blue {
            background-color: blue;
            border: 1px solid rgb(160,160,255) !important;
        }

        .red {
            background-color: red;
            border: 1px solid rgb(160,160,255) !important;
        }

        .brown {
            background-color: brown;
            border: 1px solid rgb(160,160,255) !important;
        }

        .orange {
            background-color: orange;
            border: 1px solid rgb(160,160,255) !important;
        }

        .purple {
            background-color: purple;
            border: 1px solid rgb(160,160,255) !important;
        }

        .pink {
            background-color: pink;
            border: 1px solid rgb(160,160,255) !important;
        }

        .yellow {
            background-color: yellow;
            border: 1px solid rgb(160,160,255) !important;
        }

        .transparent {
            background-color: transparent !important;
            border-left: 1px solid rgb(160,160,255) !important;
            border: none !important;
        }

        div.ui-multiselect-menu {
            background-color: white;
        }

        ul.ui-multiselect-checkboxes li {
            background-image: none;
            padding: 0;
        }

        ul.ui-multiselect-single li {
            background-image: none;
            padding: 0;
        }

        ul.ui-helper-reset li {
            background-image: none;
            padding: 0;
        }

        label.ui-multiselect-filter-label {
            font: 11px/14px arial;
            color: #9e7b48;
            text-decoration: none;
            padding-bottom: 2px;
        }

        div.ui-multiselect-filter {
            padding-bottom: 5px;
        }

        .hidden {
            display: none !important;
        }

        #offassignments tr:hover {
            box-shadow: 0 0 17px gray;
            position: relative;
            z-index: 1;
        }

        tbody::-webkit-scrollbar {
            display: none;
        }

        .box {
            height: 10px;
            width: 10px;
            display: inline-block;
            margin: 0 5px 0 5px;
        }

        .ui-widget-content {
            border: 1px solid #dddddd;
            background: #ffffff;
            color: #333333;
        }

        th.ui-datepicker-week-end,
        td.ui-datepicker-week-end {
            display: none;
        }

        .disabled {
            -webkit-filter: saturate(0%);
            filter: saturate(0%);
            opacity: 0.6;
            pointer-events: none;
        }
    </style>
}

@section scripts
{
    @Scripts.RenderFormat("<script src=\"{0}?nocache=" + Guid.NewGuid().ToString("N") + "\"></script>", "~/bundles/e")
    <script type="text/javascript" language="javascript">

        $(function () {
            $("#weekpickerstart").datepicker({
                changeMonth: true,
                changeYear: true,
                showOtherMonths: true,
                selectOtherMonths: true,
                firstDay: 1,
                minDate: $("#weekpickerstart").data("min"),
                maxDate: $("#weekpickerstart").data("max"),
                yearRange: (new Date($("#weekpickerstart").data("min")).getFullYear()).toString() + ":" + (new Date($("#weekpickerstart").data("max")).getFullYear()).toString(),
                onSelect: function (dateText, inst) {
                    $("#content").addClass("disabled");
                    var map = {};
                    map["dteStart"] = new Date(dateText);
                    map["dteEnd"] = new Date($("#weekpickerend").val());

                    $.ajax({
                        url: '@Url.Action("RefreshVacationScheduleCal", "Admin")',
                        dataType: "html",
                        type: "POST",
                        contentType: 'application/json; charset=utf-8',
                        data: JSON.stringify(map),
                        async: true,
                        processData: false,
                        cache: false
                    }).done(function (result) {
                        $("#content").html(result)
                        var off = $("#OffTypeFilter").multiselect("getLabels").find("input");
                        $.each(off, function (i, cb) {
                            $("#offassignments th[data-off='" + cb.value + "']").toggleClass("hidden", !cb.checked);
                            $("#offassignments td[data-off='" + cb.value + "']").toggleClass("hidden", !cb.checked);
                        });
                        var path = $("#PathFilter").multiselect("getLabels").find("input");
                        $.each(path, function (i, cb) {
                            $("#offassignments th[data-path='" + cb.value + "']").toggleClass("hidden", !cb.checked);
                            $("#offassignments td[data-path='" + cb.value + "']").toggleClass("hidden", !cb.checked);
                        });
                        $("#content").removeClass("disabled");
                    });
                }
            }).val("1/1/" + new Date().getFullYear().toString() + "");

            $("#weekpickerend").datepicker({
                changeMonth: true,
                changeYear: true,
                showOtherMonths: true,
                selectOtherMonths: true,
                firstDay: 1,
                minDate: $("#weekpickerend").data("min"),
                maxDate: $("#weekpickerend").data("max"),
                yearRange: (new Date($("#weekpickerstart").data("min")).getFullYear()).toString() + ":" + (new Date($("#weekpickerstart").data("max")).getFullYear()).toString(),
                onSelect: function (dateText, inst) {
                    $("#content").addClass("disabled");
                    var map = {};
                    map["dteStart"] = new Date($("#weekpickerstart").val());
                    map["dteEnd"] = new Date(dateText);

                    $.ajax({
                        url: '@Url.Action("RefreshVacationScheduleCal", "Admin")',
                        dataType: "html",
                        type: "POST",
                        contentType: 'application/json; charset=utf-8',
                        data: JSON.stringify(map),
                        async: true,
                        processData: false,
                        cache: false
                    }).done(function (result) {
                        $("#content").html(result)
                        var off = $("#OffTypeFilter").multiselect("getLabels").find("input");
                        $.each(off, function (i, cb) {
                            $("#offassignments th[data-off='" + cb.value + "']").toggleClass("hidden", !cb.checked);
                            $("#offassignments td[data-off='" + cb.value + "']").toggleClass("hidden", !cb.checked);
                        });
                        var path = $("#PathFilter").multiselect("getLabels").find("input");
                        $.each(path, function (i, cb) {
                            $("#offassignments th[data-path='" + cb.value + "']").toggleClass("hidden", !cb.checked);
                            $("#offassignments td[data-path='" + cb.value + "']").toggleClass("hidden", !cb.checked);
                        });
                        $("#content").removeClass("disabled");
                    });
                }
            }).val("12/31/" + new Date().getFullYear().toString() + "");

            $("#OffTypeFilter").multiselect({
                buttonWidth: "160px",
                selectedText: "",
                noneSelectedText: "",
                header: false,
                click: function (e, ui) {
                    $("#offassignments tbody td[data-off='" + ui.value + "']").toggleClass("transparent", !ui.checked);
                    $("#offassignments tbody td[data-off='" + ui.value + "']").prop("title", ui.checked ? ui.value : "");
                },
            });

            $("#PathFilter").multiselect({
                buttonWidth: "160px",
                selectedText: "",
                noneSelectedText: "",
                header: ['checkAll', 'uncheckAll'],
                linkInfo: {
                    checkAll: { text: "All" },
                    uncheckAll: { text: "None" }
                },
                click: function (e, ui) {
                    $("#offassignments th[data-path='" + ui.value + "']").toggleClass("hidden", !ui.checked);
                    $("#offassignments td[data-path='" + ui.value + "']").toggleClass("hidden", !ui.checked);
                },
                checkAll: function () {
                    var cbs = $(this).multiselect("getLabels").find("input");
                    $.each(cbs, function (i, cb) {
                        $("#offassignments th[data-path='" + cb.value + "']").toggleClass("hidden", false);
                        $("#offassignments td[data-path='" + cb.value + "']").toggleClass("hidden", false);
                    });
                },
                uncheckAll: function () {
                    var cbs = $(this).multiselect("getLabels").find("input");
                    $.each(cbs, function (i, cb) {
                        $("#offassignments th[data-path='" + cb.value + "']").toggleClass("hidden", true);
                        $("#offassignments td[data-path='" + cb.value + "']").toggleClass("hidden", true);
                    });
                }
            }).multiselectfilter({
                width: "100px",
                placeholder: ""
            });

            $("li.ui-multiselect-close").remove();

            $("#offassignments tbody").scrollTop($('#offassignments td.today').offset().top - $("#offassignments tbody").offset().top);
        });
    </script>
}

@section Left
{
    <table id="schedulefilter" style="width:95%">
        @*<tr>
                <td colspan="2" style="padding-bottom:25px;text-align:center">
                    <button>Add Time Off</button>
                </td>
            </tr>*@
        <tr>
            <td colspan="2" style="font-weight:bold">Filter</td>
        </tr>
        <tr>
            <td class="text7">Start Date</td>
            <td><input id="weekpickerstart" data-min="@Model.Dates.Item1" data-max="@Model.Dates.Item2" /></td>
        </tr>
        <tr>
            <td class="text7">End Date</td>
            <td><input id="weekpickerend" data-min="@Model.Dates.Item1" data-max="@Model.Dates.Item2" /></td>
        </tr>
        <tr>
            <td class="text7">Path</td>
            <td>@Html.DropDownList("PathFilter", Model.Paths.Select(x => new SelectListItem() { Value = x, Text = x, Selected = true }), new { @id = "PathFilter", multiple = "true" })</td>
        </tr>
        <tr>
            <td class="text7">Off Type</td>
            <td>
                <select id="OffTypeFilter" multiple="multiple" name="OffTypeFilter">
                    @foreach (var offtype in Model.Assignments)
                    {
                        <option selected="selected" value="@offtype.Item1" data-color-class="@offtype.Item2">@offtype.Item1</option>
                    }
                </select>
            </td>
        </tr>
        <tr>
            <td></td>
            <td>
                @foreach (var offtype in Model.Assignments)
                {
                    <span><div class="box @offtype.Item2"></div>@offtype.Item1</span>
                }
            </td>
        </tr>
    </table>
}

<div id="content">
    @Html.Partial("VacationScheduleCal", Model)
</div>
