@model PathDistribution.Models.EligibilityData

@{
    ViewBag.Title = "Eligibility";
    Layout = "~/Views/Shared/_LayoutSched.cshtml";
}

@section styles
{
    @Styles.RenderFormat("<link rel=\"stylesheet\" href=\"{0}?nocache=" + Guid.NewGuid().ToString("N") + "\" />", "~/bundles/2")
    <style>
        .rowDragHandle {
            display: inline-block;
            vertical-align: middle;
            margin-right: .5em;
            cursor: pointer;
            /*padding: .1em;*/
        }

        /*css.gg*/
        .gg-menu-grid-o {
            box-sizing: border-box;
            position: relative;
            display: block;
            transform: scale(1);
            /*width: 16px;*/
            height: 16px;
        }

            .gg-menu-grid-o::before {
                content: "";
                display: block;
                box-sizing: border-box;
                position: absolute;
                width: 4px;
                height: 4px;
                background: #466b95;
                box-shadow: 0 6px 0 #466b95, 6px 6px 0 #466b95, 0 0 0 #466b95, 0 0 0 #466b95, 0 0 0 #466b95, 6px 0 0 #466b95, 0 0 0 #466b95, 0 0 0 #466b95;
                border-radius: 22px;
            }

        .ui-widget-content {
            border: 1px solid #dddddd;
            background: #ffffff;
            color: #333333;
        }

        ul.nodot {
            list-style-type: none;
            margin: 0;
            padding: 0;
            width: 145px;
        }

            ul.nodot:hover {
                border: 1px solid #466b95;
            }

            ul.nodot li {
                display: table-row;
                background-image: none;
                padding: 2px 0 2px 5px;
                font-size: 11px;
            }

        div.ui-multiselect-menu {
            background-color: white;
        }

        ul.ui-multiselect-checkboxes li {
            background-image: none;
            padding: 0;
        }

        ul.ui-multiselect-single li {
            background-image: none;
            padding: 0;
        }


        ul.ui-helper-reset li {
            background-image: none;
            padding: 0;
        }

        label.ui-multiselect-filter-label {
            font: 11px/14px arial;
            color: #9e7b48;
            text-decoration: none;
            padding-bottom: 2px;
        }

        div.ui-multiselect-filter {
            padding-bottom: 5px;
        }

        .hidden {
            display: none !important;
        }
        /*
        .empty {
            background: #A6BAD0;
            height: 18px;
            width: 145px;
            min-width:145px;
            border: 1px solid #9e7b48;
            padding: 2px 0 2px 5px;
        }
        .show {
            display: table-row !important;
        }*/
    </style>
}

@section scripts
{
    @Scripts.Render("~/bundles/e")
    <script type="text/javascript">
    const EligibilityTypes = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Enum.GetNames(typeof(PathDistribution.Models.EligibilityTypes))));

        function FilterPaths() {
            var status = $("#StatusFilter").slider("value"); // 0 - Active, 1 = Inactive, 2 = All
            var path = $.map($("#PathFilter").multiselect("getChecked"), function (input) {
                return input.value;
            });

            var divs = $("#eligibilities div[data-id!='']").filter(function () {
                return (typeof $(this).attr('data-id') !== "undefined" && $(this).attr('data-id') != "");
            });

            $(divs).filter(function () {
                var pathfilter = path.indexOf($(this).data("id")) > -1;
                var statusfilter = (([0, 2].indexOf(status) > -1 && $(this).data("status") == "True") || ([1, 2].indexOf(status) > -1 && $(this).data("status") == "False"));

                /* true = hide, false = show */
                $(this).toggleClass("hidden",!(pathfilter && statusfilter))
            });
            return
        }

        function UpdateItem(chrPath, chrAbbr, intEligibility, intCredited) {
            var map = {};
            map["chrPath"] = chrPath;
            map["chrAbbr"] = chrAbbr;
            map["intEligibility"] = intEligibility;
            map["intCredited"] = intCredited;
            var performed = -1;
            $.ajax({
                url: '@Url.Action("UpdateEligibility", "Admin")',
                dataType: "json",
                type: "POST",
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(map),
                async: false,
                processData: false,
                cache: false
            }).done(function (result) {
                if (result.Status == "Success") {
                    performed = result.performed;
                } else {
                    alert("Oops");
                }
            });
            return performed;
        }

        $(document).ready(function () {
            @foreach (var item in Model.Paths)
            {
                var ids = $"#Eligible_{item.chrCopathAbbr},#Preferred_{item.chrCopathAbbr},#NotEligible_{item.chrCopathAbbr}";
                @:$("@ids").sortable({
                @:connectWith: "@ids",
                @:placeholder: "empty",
                @:stop: function (e, ui) {
                @:    var id = ui.item.data("id").toString().split("|");
                @:    var chrPath = id[0];
                @:    var chrAbbr = id[1];
                @:    var intEligibility = EligibilityTypes.indexOf(ui.item.closest("ul").attr("id").toString().split("_")[0]);
                @:    var intCredited = $(ui.item).find("input").val();
                @:    var performed = UpdateItem(chrPath, chrAbbr, intEligibility, intCredited);
                @:    if (performed != -1) { $(ui.item).find("div:eq(1)").text(chrAbbr + " (" + performed.toString() + ")"); }
                @:  }
                @:}).disableSelection();
            }

            $("#eligibilities").find("input").on("change", function (e) {
                var id = $(this).closest("li").data("id").toString().split("|");
                var chrPath = id[0];
                var chrAbbr = id[1];
                var intEligibility = EligibilityTypes.indexOf($(this).closest("li").closest("ul").attr("id").toString().split("_")[0]);
                var intCredited = $(this).val();
                var performed = UpdateItem(chrPath, chrAbbr, intEligibility, intCredited);
                if (performed != -1) { $(this).closest("li").find("div:eq(1)").text(chrAbbr + " (" + performed.toString() + ")"); }
            });

            $("#PathFilter").multiselect({
                buttonWidth: "160px",
                selectedText: "",
                noneSelectedText: "",
                header: ['checkAll', 'uncheckAll'],
                linkInfo: {
                    checkAll: { text: "All" },
                    uncheckAll: { text: "None" }
                }
            }).bind("multiselectclick multiselectcheckall multiselectuncheckall", function (event, ui) {
                FilterPaths();
            }).multiselectfilter({
                width: "100px",
                placeholder: ""
            });

            $("#ActivityFilter").multiselect({
                buttonWidth: "160px",
                selectedText: "",
                noneSelectedText: "",
                header: ['checkAll', 'uncheckAll'],
                linkInfo: {
                    checkAll: { text: "All" },
                    uncheckAll: { text: "None" }
                },
                click: function (e, ui) {
                    $("#eligibilities li[data-id$='|" + ui.value + "']").toggleClass("hidden", !ui.checked);
                },
                checkAll: function () {
                    var cbs = $(this).multiselect("getLabels").find("input");
                    $.each(cbs, function (i, cb) {
                        $("#eligibilities li[data-id$='|" + cb.value + "']").toggleClass("hidden", false);
                    });
                },
                uncheckAll: function () {
                    var cbs = $(this).multiselect("getLabels").find("input");
                    $.each(cbs, function (i, cb) {
                        $("#eligibilities li[data-id$='|" + cb.value + "']").toggleClass("hidden", true);
                    });
                }
            }).multiselectfilter({
                width: "100px",
                placeholder: ""
            });

            $("li.ui-multiselect-close").remove();

            var handle = $("#StatusText");
            var slide = ["Active", "Inactive", "All"];
            $("#StatusFilter").slider({
                min: 0, max: 2, range: "min",
                value: 2,
                create: function () { handle.text(slide[$(this).slider("value")]); },
                change: function (event, ui) { FilterPaths(); },
                slide: function (e, ui) { handle.text(slide[ui.value]); }
            });
        });
    </script>
}

@section Left
{
    <table id="schedulefilter" style="width:95%">
        <tr>
            <td colspan="2" style="font-weight:bold">Filter</td>
        </tr>
        <tr>
            <td class="text7" style="vertical-align: top; padding-top: 5px; width: 56.375px;">Status</td>
            <td>
                <div id="StatusFilter"></div>
                <div id="StatusText" class="text2" style="width:100%;text-align:center;color:#466b95;"></div>
            </td>
        </tr>
    </table>
    <table id="schedulefilter" style="width:95%">
        <tr>
            <td class="text7">Path</td>
            <td>@Html.DropDownList("PathFilter", Model.Paths.Select(x => new SelectListItem() { Value = x.chrCopathAbbr, Text = x.chrCopathAbbr, Selected = true }), new { @id = "PathFilter", multiple = "true" })</td>
        </tr>
        <tr>
            <td class="text7">Activity</td>
            <td>@Html.DropDownList("ActivityFilter", Model.Assignments.Select(x => new SelectListItem() { Value = x.Item1, Text = x.Item1, Selected = true }), new { @id = "ActivityFilter", multiple = "true" })</td>
        </tr>
    </table>
}

<div id="content">
    <div id="eligibilities" style="display:flex;flex-wrap:wrap;align-items:stretch;">

        @foreach (var path in Model.Paths)
        {
            <div style="width: 35%; padding: 0 5px; background: linear-gradient(0deg, #EDE7DB 20%, #FAFAFA 80%, #EDE7DB 100%); " data-id="@path.chrCopathAbbr" data-status="@path.bitActive">
                <div style="box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);padding: 7px 0 7px 0;height:100%">
                    <div style="font-weight: bold; text-align: center;padding-bottom:10px">@path.chrCopathAbbr - @path.chrName</div>
                    <div style="display: flex; padding-bottom: 10px; ">
                        <div style="flex: 33.33%; padding-left: 5px">
                            <div class="text7" style="text-align: center; padding-bottom: 5px; ">Eligible</div>
                            <ul id="Eligible_@path.chrCopathAbbr" class="nodot" style="padding:5px;">
                                @*<li class="empty hidden"></li>*@
                                @foreach (var item in Model.Eligibilities.Where(x => x.chrPath == path.chrCopathAbbr && x.intEligibility == PathDistribution.Models.EligibilityTypes.Eligible))
                                {
                                    var id = $"{path.chrCopathAbbr}|{item.chrAbbr}";
                                    <li data-id="@id">
                                        <div style="width:16px;display:table-cell;padding-left:3px;">
                                            <span class="rowDragHandle"><i class="gg-menu-grid-o"></i></span>
                                        </div>
                                        <div style="display: table-cell;">
                                            @Html.DisplayFor(modelItem => item.chrAbbr) (@Html.DisplayFor(modelItem => item.intPerformed))
                                        </div>
                                        <div style="width:40px;display:table-cell;padding-left:5px;">
                                            @Html.TextBoxFor(modelItem => item.intCredited, new { @style = "width: 40px", @type = "number", @min = 0 })
                                        </div>
                                    </li>
                                }
                            </ul>
                        </div>
                        <div style="flex: 33.33%; padding-left: 5px">
                            <div class="text7" style="text-align: center; padding-bottom: 5px;">Preferred</div>
                            <ul id="Preferred_@path.chrCopathAbbr" class="nodot" style="padding:5px;">
                                @*<li class="empty hidden"></li>*@
                                @foreach (var item in Model.Eligibilities.Where(x => x.chrPath == path.chrCopathAbbr && x.intEligibility == PathDistribution.Models.EligibilityTypes.Preferred))
                                {
                                    var id = $"{path.chrCopathAbbr}|{item.chrAbbr}";
                                    <li data-id="@id" data-filter="@id">
                                        <div style="width:16px;display:table-cell;padding-left:3px;">
                                            <span class="rowDragHandle"><i class="gg-menu-grid-o"></i></span>
                                        </div>
                                        <div style="display: table-cell;">
                                            @Html.DisplayFor(modelItem => item.chrAbbr) (@Html.DisplayFor(modelItem => item.intPerformed))
                                        </div>
                                        <div style="width:40px;display:table-cell;padding-left:5px;">
                                            @Html.TextBoxFor(modelItem => item.intCredited, new { @style = "width: 40px", @type = "number", @min = 0 })
                                        </div>
                                    </li>
                                }
                            </ul>
                        </div>
                        <div style="flex: 33.33%; padding-left: 5px">
                            <div class="text7" style="text-align: center; padding-bottom: 5px;">Not Eligible</div>
                            <ul id="NotEligible_@path.chrCopathAbbr" class="nodot" style="padding:5px;">
                                @*<li class="empty hidden"></li>*@
                                @foreach (var item in Model.Eligibilities.Where(x => x.chrPath == path.chrCopathAbbr && x.intEligibility == PathDistribution.Models.EligibilityTypes.NotEligible))
                                {
                                    var id = $"{path.chrCopathAbbr}|{item.chrAbbr}";
                                    <li data-id="@id">
                                        <div style="width:16px;display:table-cell;padding-left:3px;">
                                            <span class="rowDragHandle"><i class="gg-menu-grid-o"></i></span>
                                        </div>
                                        <div style="display: table-cell;">
                                            @Html.DisplayFor(modelItem => item.chrAbbr) (@Html.DisplayFor(modelItem => item.intPerformed))
                                        </div>
                                        <div style="width:40px;display:table-cell;padding-left:5px;">
                                            @Html.TextBoxFor(modelItem => item.intCredited, new { @style = "width: 40px", @type = "number", @min = 0 })
                                        </div>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>